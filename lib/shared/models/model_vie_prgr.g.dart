// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'model_vie_prgr.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

ViePrgr _$ViePrgrFromJson(Map<String, dynamic> json) => ViePrgr(
      json['codgrad'] as int?,
      json['codprod'] as int?,
      json['livreid'] as String?,
      json['refgrad'] as String?,
      json['ideprod'] as String?,
      (json['estiest'] as num?)?.toDouble(),
      json['desprod'] as String?,
      json['cl4prod'] as int?,
      json['cl1prod'] as int?,
      json['cl2prod'] as int?,
      json['nomprod'] as String?,
      json['espprod'] as String?,
      (json['metgrad'] as num?)?.toDouble(),
      json['maxacre'] as num?,
      json['desmaxi'] as num?,
      json['unvgrad'] as int?,
      json['parfide'] as int?,
      json['agrgrad'] as int?,
      json['nomdivi'] as String?,
      json['nomsubd'] as String?,
      json['lismate'] as int?,
      (json['desprom'] as num?)?.toDouble(),
      json['escombo'] as int?,
      json['negprod'] as int?,
      (json['estsald'] as num?)?.toDouble(),
      json['prodtin'] == null
          ? null
          : DateTime.parse(json['prodtin'] as String),
      json['prodtfi'] == null
          ? null
          : DateTime.parse(json['prodtfi'] as String),
      (json['preprom'] as num?)?.toDouble(),
      (json['preatac'] as num?)?.toDouble(),
      (json['preuffe'] as num?)?.toDouble(),
      (json['qtdatac'] as num?)?.toDouble(),
      json['regr_sa'] as int?,
      json['ipiregr'] as int?,
      json['p_cregr'] as int?,
      json['fdenicm'] as int?,
      json['pdenicm'] as int?,
      json['nfcicms'] as int?,
      json['fforicm'] as int?,
      json['jdenicm'] as int?,
      json['jforicm'] as int?,
      json['pforicm'] as int?,
      json['ipi_ent'] as int?,
      json['p_c_ent'] as int?,
      json['icmdent'] as int?,
      json['icmfent'] as int?,
      json['ajuprec'] as int?,
      json['desunid'] as String?,
      json['imgUrl'] as String?,
      (json['fatconv'] as num?)?.toDouble(),
      json['lo1grad'] as String?,
      json['lo2grad'] as String?,
      json['lo3grad'] as String?,
      json['filesto'] as String?,
      (json['imagens'] as List<dynamic>?)?.map((e) => e as String).toList(),
      json['proplan'] as int?,
      json['datvenc'] == null
          ? null
          : DateTime.parse(json['datvenc'] as String),
      json['diavenc'] as int?,
      (json['pr1esto'] as num?)?.toDouble(),
      json['forlinh'] as int?,
      json['obsprod'] as String?,
      (json['vitrine'] as num?)?.toDouble(),
    )..prevend = (json['prevend'] as num).toDouble();

Map<String, dynamic> _$ViePrgrToJson(ViePrgr instance) => <String, dynamic>{
      'codgrad': instance.codgrad,
      'codprod': instance.codprod,
      'livreid': instance.livreid,
      'refgrad': instance.refgrad,
      'ideprod': instance.ideprod,
      'estiest': instance.estiest,
      'desprod': instance.desprod,
      'cl4prod': instance.cl4prod,
      'cl1prod': instance.cl1prod,
      'cl2prod': instance.cl2prod,
      'nomprod': instance.nomprod,
      'espprod': instance.espprod,
      'metgrad': instance.metgrad,
      'maxacre': instance.maxacre,
      'desmaxi': instance.desmaxi,
      'unvgrad': instance.unvgrad,
      'parfide': instance.parfide,
      'agrgrad': instance.agrgrad,
      'nomdivi': instance.nomdivi,
      'nomsubd': instance.nomsubd,
      'lismate': instance.lismate,
      'desprom': instance.desprom,
      'escombo': instance.escombo,
      'negprod': instance.negprod,
      'estsald': instance.estsald,
      'prodtin': instance.prodtin?.toIso8601String(),
      'prodtfi': instance.prodtfi?.toIso8601String(),
      'preprom': instance.preprom,
      'preatac': instance.preatac,
      'preuffe': instance.preuffe,
      'qtdatac': instance.qtdatac,
      'regr_sa': instance.regrsa,
      'ipiregr': instance.ipiregr,
      'p_cregr': instance.pcregr,
      'fdenicm': instance.fdenicm,
      'pdenicm': instance.pdenicm,
      'nfcicms': instance.nfcicms,
      'fforicm': instance.fforicm,
      'jdenicm': instance.jdenicm,
      'jforicm': instance.jforicm,
      'pforicm': instance.pforicm,
      'ipi_ent': instance.ipient,
      'p_c_ent': instance.pcent,
      'icmdent': instance.icmdent,
      'icmfent': instance.icmfent,
      'ajuprec': instance.ajuprec,
      'desunid': instance.desunid,
      'imgUrl': instance.imgUrl,
      'fatconv': instance.fatconv,
      'lo1grad': instance.lo1grad,
      'lo2grad': instance.lo2grad,
      'lo3grad': instance.lo3grad,
      'filesto': instance.filesto,
      'imagens': instance.imagens,
      'proplan': instance.proplan,
      'datvenc': instance.datvenc?.toIso8601String(),
      'diavenc': instance.diavenc,
      'pr1esto': instance.pr1esto,
      'forlinh': instance.forlinh,
      'obsprod': instance.obsprod,
      'vitrine': instance.vitrine,
      'prevend': instance.prevend,
    };
